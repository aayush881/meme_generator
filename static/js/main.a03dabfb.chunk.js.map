{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","className","MemeGenerator","props","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","randNum","Math","floor","random","state","allImg","length","randImg","url","console","log","memeImg","topText","bottomText","fetch","then","response","json","memes","data","onSubmit","this","type","placeholder","onChange","src","width","height","Component","App","ReactDOM","render","document","getElementById"],"mappings":"wKAGe,SAASA,IACpB,OACI,iCACI,mBAAGC,UAAU,SAAb,8B,uCC4DGC,E,kDA/DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAmBVC,aAAa,SAACC,GAAS,IAAD,EAECA,EAAMC,OAAlBC,EAFW,EAEXA,KAAKC,EAFM,EAENA,MACZ,EAAKC,SAAL,eAAgBF,EAAMC,KAvBP,EAyBnBE,aAAa,SAACL,GACVA,EAAMM,iBACN,IAAMC,EAAQC,KAAKC,MAAMD,KAAKE,SAAW,EAAKC,MAAMC,OAAOC,QACrDC,EAAQ,EAAKH,MAAMC,OAAOL,GAASQ,IACzCC,QAAQC,IAAIH,GACZ,EAAKV,SAAS,CAACc,QAAQJ,KA5BvB,EAAKH,MAAQ,CACTQ,QAAQ,GACRC,WAAW,GACXF,QAAQ,GACRN,OAAO,IANI,E,gEAUC,IAAD,OACfS,MAAM,qCACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAC,GAAW,IACNE,EAAOF,EAASG,KAAhBD,MACPT,QAAQC,IAAIQ,GACZ,EAAKrB,SAAS,CAACQ,OAAOa,S,+BAiB1B,OACI,gCACI,uBAAM7B,UAAU,YAAY+B,SAAUC,KAAKvB,aAA3C,UACI,uBACIH,KAAK,UACL2B,KAAK,OACLC,YAAY,UACZ3B,MAAOyB,KAAKjB,MAAMQ,QAClBY,SAAUH,KAAK7B,eAEnB,uBACIG,KAAK,aACL2B,KAAK,OACLC,YAAY,aACZ3B,MAAOyB,KAAKjB,MAAMS,WAClBW,SAAUH,KAAK7B,eAEnB,4CAEJ,sBAAKH,UAAU,OAAf,UACI,qBAAKoC,IAAKJ,KAAKjB,MAAMO,QAASe,MAAM,QAAQC,OAAO,UACnD,oBAAItC,UAAU,MAAd,SAAqBgC,KAAKjB,MAAMQ,UAChC,oBAAIvB,UAAU,SAAd,SAAwBgC,KAAKjB,MAAMS,uB,GAxD3Be,aCYbC,MAVf,WACE,OACE,sBAAKxC,UAAU,MAAf,UAEE,cAACD,EAAD,IACA,cAAC,EAAD,QCLN0C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.a03dabfb.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport './index.css'\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <p className=\"header\">Meme Generator</p>\r\n        </header>\r\n    )\r\n}\r\n/*\r\ngit init  \r\ngit add . \r\ngit status\r\ngit commit -m \"message\"\r\nfirst time==> git remote add origin URL\r\ngit push -u origin master\r\n\r\ngit pull\r\ngit push  origin master\r\n\r\n*/"," import React, { Component } from 'react';\r\n import './index.css'\r\nclass MemeGenerator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            topText:\"\",\r\n            bottomText:\"\",\r\n            memeImg:\"\",\r\n            allImg:[]\r\n         \r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response=>response.json())\r\n        .then(response=>{\r\n            const {memes}=response.data\r\n            console.log(memes)\r\n            this.setState({allImg:memes})\r\n        })\r\n\r\n    }\r\n    handleChange=(event)=>{\r\n        \r\n        const {name,value}=event.target\r\n        this.setState({[name]:value})\r\n    }\r\n    handleSubmit=(event)=>{\r\n        event.preventDefault()\r\n        const randNum=Math.floor(Math.random() * this.state.allImg.length)\r\n        const randImg=this.state.allImg[randNum].url\r\n        console.log(randImg)\r\n        this.setState({memeImg:randImg})\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        name=\"topText\"\r\n                        type=\"text\"\r\n                        placeholder=\"topText\"\r\n                        value={this.state.topText}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <input\r\n                        name=\"bottomText\"\r\n                        type=\"text\"\r\n                        placeholder=\"bottomText\"\r\n                        value={this.state.bottomText}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button>Gen</button>\r\n                </form>\r\n                <div className=\"meme\">\r\n                    <img src={this.state.memeImg} width=\"400px\" height=\"400px\"/>\r\n                    <h2 className=\"top\">{this.state.topText}</h2>\r\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MemeGenerator;","import './App.css';\nimport Header from './Header';\nimport MemeGenerator from './MemeGenerator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Header/>\n      <MemeGenerator/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n\n"],"sourceRoot":""}